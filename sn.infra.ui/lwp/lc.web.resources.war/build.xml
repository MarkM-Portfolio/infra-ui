<!-- ***************************************************************** -->
<!--                                                                   -->
<!-- IBM Confidential                                                  -->
<!--                                                                   -->
<!-- OCO Source Materials                                              -->
<!--                                                                   -->
<!-- Copyright IBM Corp. 2002, 2015                                    -->
<!--                                                                   -->
<!-- The source code for this program is not published or otherwise    -->
<!-- divested of its trade secrets, irrespective of what has been      -->
<!-- deposited with the U.S. Copyright Office.                         -->
<!--                                                                   -->
<!-- ***************************************************************** -->

<project name="lc.web.resources.war" default="development" basedir=".">

	<property name="dir.websrc" value="${basedir}/war" />
	<property name="war_package.optional" value="web_resources_war_extra" />

	<property name="mf.cp" value="lc.web.osgi.servletbridge.jar lc.web.resources.remote.jar lc.shindig.serverapi.core.jar lc.customAuthClient.jar lc.config.svc-1.1.jar lc.util.web-3.0.jar lc.util.base-3.0.jar lc.util.jse.jar commons-collections-3.2.1.jar commons-configuration-1.5-plus-node-clone.jar commons-dbcp-1.2.1.jar commons-digester-1.7.jar commons-httpclient-3.0.jar commons-pool-1.2.jar commons-lang-2.4.jar commons-logging-1.0.4.jar commons-codec-1.3-minus-mp.jar commons-io-1.4.jar commons-el.jar spring.jar highway.common-1.0.jar highway.service-1.0.jar mybatis-2.3.5.jar lc.oauth.platform.jar lc.oauth.messages.jar" />

	<import file="${env.WPLC_IMPORT}/std_props.xml" />
	<import file="${env.WPLC_IMPORT}/std_dirs.xml" />

	<property name="output.jar" value="${dir.lib}/connections.web.resources.jar" />
	<property name="output.war" value="${dir.lib}/connections.web.resources.war" />

	<import file="${env.WPLC_IMPORT}/check.xml" />
	<import file="${env.WPLC_IMPORT}/compile.xml" />
	<import file="${env.WPLC_IMPORT}/rmic.xml" />
	<import file="${env.WPLC_IMPORT}/package_extra.xml" />
	<import file="${env.WPLC_IMPORT}/javadoc.xml" />
	<import file="${env.WPLC_IMPORT}/jdepend.xml" />
	<import file="${env.WPLC_IMPORT}/clean.xml" />
	<import file="${env.WPLC_IMPORT}/comp_zip.xml" />
	<import file="${env.WPLC_IMPORT}/std_targets.xml" />
	<import file="${env.WPLC_IMPORT}/process_nls.xml" />
	<import file="${env.WPLC_IMPORT}/performance.xml" />

	<target name="web_resources_war_extra" depends="import_osgi_war, copyBuildNav"/>

	<target name="import_osgi_war">

		<echo message="${dir.websrc}" />
		<delete includeemptydirs="true" failonerror="false" quiet="false" verbose="true">
			<fileset dir="${dir.websrc}/WEB-INF/eclipse/plugins">
				<include name="**/*" />
				<!-- Leave .link folders in the dev enviroment so developers can have relative access -->
				<exclude name="*.link" />
				<exclude name="**/.jazzignore" />
			</fileset>
			<fileset dir="${dir.websrc}/WEB-INF/eclipse/features" includes="**/*" />
			<fileset dir="${copy.websrc.dir}/WEB-INF/eclipse/plugins" includes="**/*" />
			<fileset dir="${copy.websrc.dir}/WEB-INF/eclipse/features" includes="**/*" />
		</delete>

		<mkdir dir="${copy.websrc.dir}/WEB-INF/eclipse" />
		<collector componentName="${ant.project.name}" groupList="to_osgi_war" verbose="${verbose}"
			overrideDest="false" includeDependencies="true" recurseDependencies="true"
			usePreferredInstallLocation="true" type="directory" platform="all" toDir="${copy.websrc.dir}" />

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${copy.websrc.dir}/WEB-INF/eclipse">
				<include name="plugins/org.apache.naming_*/**" />
				<include name="plugins/org.mortbay.jetty.util_*.jar" />
				<include name="plugins/org.mortbay.jetty.server_*.jar" />
				<include name="plugins/org.eclipse.equinox.http.jetty_*.jar" />
				<include name="plugins/com.ibm.team.repository.jndi_*.jar" />
				<include name="plugins/com.ibm.team.server.embedded.jetty_*.jar" />
				<include name="plugins/com.ibm.lconn.core.web.eclipse_*/**" />
				<include name="plugins/com.ibm.lconn.core.web.was_*/**" />
				<include name="plugins/com.ibm.lconn.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.lconn.share.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.lconn.search.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.lconn.core.styles.test_*.jar" />
				<include name="plugins/com.ibm.oneui.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.social.test.web.resources_*.jar" />				
				<include name="plugins/com.ibm.ic.as.lconn.web.resources_*.jar" />				
				<include name="plugins/com.ibm.ic.socgadget.web.resources_*.jar" />
				<include name="plugins/com.ibm.ic.sharebox.web.resources_*.jar" />
				<include name="plugins/com.ibm.ic.social.web.resources.test_*.jar" />							
				<include name="plugins/com.ibm.ic.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.ic.share.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.ic.search.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.ic.gadget.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.ic.highway.web.resources.test_*.jar" />
				<include name="plugins/com.ibm.ic.mm.web.resources.test_*.jar" />
				<include name="plugins/javax.servlet_*.jar" />
				<!--include name="plugins/log4j.settings_*.jar" /-->
				<include name="plugins/net.jazz.ajax.tests_*.jar" />
				<include name="plugins/net.jazz.web.core_*.jar" />
				<include name="plugins/org.apache.commons.logging.log4j_*.jar" />
				<!--include name="plugins/org.apache.log4j_*.jar" /-->
				<include name="plugins/org.junit_*.jar" />
				<include name="plugins/org.junit4_*.jar" />
				<include name="plugins/org.junit_3.8.2*/**" />
				<include name="plugins/org.junit_4.8.1*/**" />
				<include name="plugins/org.hamcrest.core_*.jar" />
				<!-- We don't need a feature except at build time -->
				<include name="features/*.feature_*/**" />
				<!-- Source plugins should only be present in the target platform definition -->
				<include name="plugins/*.source_*.jar" />
				<!-- Omit development config from target platform -->
				<include name="configuration/config.development.ini" />
				<!-- No link files should ever be part of the output -->
				<include name="**/*.link" />
				<include name="**/.jazzignore" />
			</fileset>
		</delete>

		<!-- put the base runtime environment in the project directory, so WAR can be deployed in Eclipse -->
		<copy overwrite="true" todir="${dir.websrc}/WEB-INF/eclipse">
			<fileset dir="${copy.websrc.dir}/WEB-INF/eclipse">
				<include name="plugins/org.eclipse.osgi_*/**" />
				<include name="plugins/org.eclipse.equinox.simpleconfigurator_*/**" />
				<include name="plugins/org.eclipse.equinox.ds_*/**" />
			</fileset>
		</copy>

		<copy file="${dir.websrc}/WEB-INF/eclipse/configuration/config.development.ini" tofile="${dir.websrc}/WEB-INF/eclipse/configuration/config.ini"
			overwrite="true" />
		<copy file="${dir.websrc}/WEB-INF/eclipse/launch.runtime.ini" tofile="${dir.websrc}/WEB-INF/eclipse/launch.ini"
			overwrite="true" />

		<move file="${copy.websrc.dir}/WEB-INF/eclipse/configuration/config.runtime.ini" tofile="${copy.websrc.dir}/WEB-INF/eclipse/configuration/config.ini"
			overwrite="true" />
		<move file="${copy.websrc.dir}/WEB-INF/eclipse/launch.runtime.ini" tofile="${copy.websrc.dir}/WEB-INF/eclipse/launch.ini"
			overwrite="true" />
	</target>

	<target name="copyBuildNav">
		<antcall target="copyNavToDir">
			<param name="target.nav.dir" value="${dir.war.tmpout}/nav" />
		</antcall>
	</target>

	<target name="copyNavToDir">
		<locateComponent component="sn.coreui" path="nav" locateBuildDir="true" property="sn.coreui.path" />
		<delete dir="${target.nav.dir}" />
		<copy todir="${target.nav.dir}" includeEmptyDirs="true">
			<fileset dir="${sn.coreui.path}" includes="**" />
		</copy>
	</target>
</project>

