# ***************************************************************** 
#                                                                   
# IBM Confidential                                                  
#                                                                   
# OCO Source Materials                                              
#                                                                   
# Copyright IBM Corp. 2011, 2012                                    
#                                                                   
# The source code for this program is not published or otherwise    
# divested of its trade secrets, irrespective of what has been      
# deposited with the U.S. Copyright Office.                         
#                                                                   
# ***************************************************************** 

# The values provided in this file represent development defaults.  All numbers
# are in seconds unless otherwise noted.
#
# "freshness" applies to the amount of time the result will be cached in server
# memory, and usually only applies to expensive calculations of the dependencies
# between JavaScript modules.  For some types of request, the "freshness" property
# will have no effect
#
# "clientCache" applies to the length of time the resource will be cached in the
# browser client or any intervening HTTP proxies.

# The number of resource graph requests that can be cached on the server.  Most
# applications will generate 3 graphs per language requested (one for each layer of 
# JS) and the server as a whole will generate 2-20 CSS resource graphs.  Increase
# the cache capacity if the cache is being turned over.  This is an LRU cache.
#
# Each cache entry is a list of resources, a set of excluded resources, and a map
# by id of those resources - generally between 2-5 KB in size.
#
#cacheCapacity = 256

# Requests made to access the dependency tree for a set of aggregated JavaScript
# or CSS are cached to increase performance.  Increasing the freshness will increase 
# the interval between when the contents on disk are compared to the cached version 
# in memory.  Customizations will not take effect until the resource graph freshness 
# expires.  
#
# Deploying new versions of the product typically involves a restart of the Common.ear
# which will clear this in-memory cache.
#
#aggregateResourceFreshness = 3

# When users download an aggregated JavaScript or CSS file without the 'etag' parameter
# (if they construct it themselves, which is rare), the request will normally be marked
# as uncacheable.  Marking these resources cacheable can result in updates or fixes not
# being displayed to users until this window expires.
#
# Generally, keep this value equal to directResourceClientCache
#
# Newly deployed images and other static resources will only change in users' browsers
# every 5 minutes.
#
#aggregateResourceClientCache = 20

# When users download an aggregated JavaScript or CSS file with the 'etag' parameter is 
# present on the URL, the request will be marked as cacheable in the browser.  Subsequent 
# requests with the same etag will use the version in the browser cache.
#
# When deploying a new version of the product, the calculated etag value will change
# and a new version of the JavaScript will be served.  Only adjust this value if you wish
# to increase the frequency with which browser clients contact your server to retrieve
# JS.
#
#aggregateResourceWithETagClientCache = 2592000

# All images referenced by CSS and most CSS files will have an 'etag' parameter appended
# automatically - this value controls how long those resources are cached on the client.
#
# The calculated etag value will change and a new version of the image or CSS will be
# served.  Generally, keep this value equal to the previous value.  
#  
#directResourceWithETagClientCache = 2592000

# Requests made to content in the Common EAR that do not have an 'etag' 
# parameter on the URL.  Only in very rare cases will these resources be 
# referenced.
#
# Note: if the server is restarted and a new version of the resource is 
# deployed (via ifix or customization) users will not see the new resource 
# until the client cache interval has passed.
#
#directResourceClientCache = 20
